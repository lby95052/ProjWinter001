#include <stdio.h>
#include <stdlib.h>
#include "head.h"
// #define LENGTH 30

// typedef struct User_login{
// char name[LENGTH]; //用户名
// int totalcount; //登录次数
// }SDataType; //链表的节点

void fileread(const char *filename)
{
	FILE *fp;

	printf("try fileread\n");

	// char line[1024] = {0}; //save file data

	// SDataType data01;

	int i, r_n = 0;
	char buf[LENGTH];
	char c;

	printf("%s is file path\n", filename);

	if ((fp = fopen("E:\\gitmannager\\ProjWinter001\\user_login.txt", "r+")) == NULL)
	{
		printf("Cannot open this file\n");
	}
	else
	{

		printf("OPEN This file is OK\n");
		printf("计算文件中数据的行数\n");
		//计算文件中数据的行数
		while (!feof(fp))
		{
			c = fgetc(fp);
			if (c == '\n')
				r_n++;
		}
		printf("r_n=%d\n", r_n);

		rewind(fp); //将指针重置到第一行

		struct User_login *line1 = NULL;

		line1 = (struct User_login *)malloc(sizeof(struct User_login) * (r_n + 1)); //创建一个结构体含有(r_n+1)个数据的空间

		for (i = 1; i <= r_n; i++)
		{
			fgets(buf, LENGTH, fp);//一次读取一行数据到buf
			sscanf(buf, "%[^,]", &line1[i].name); //跳过,读取数据
			printf("save %s to buf\n", line1[i].name);
		}
		printf("文件读取结束\n");

		for (i = 1; i <= r_n - 1; i++)
		{

		printf("\n%s ", line1[i].name);

		}

		if (fclose(fp))
			printf("file close error!\n");
	}
}